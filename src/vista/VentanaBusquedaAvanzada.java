/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import Singleton.Singleton;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Date;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import org.mariadb.jdbc.Connection;

/**
 *
 * @author JFGIR
 */
public final class VentanaBusquedaAvanzada extends javax.swing.JFrame {

    DefaultTableModel modelo = new DefaultTableModel();
    TableRowSorter<DefaultTableModel> tr = new TableRowSorter<>(modelo);
    Connection connection = Singleton.getInstancia().getConnection();
    PreparedStatement ps = null;
    ResultSet rs = null;

    public VentanaBusquedaAvanzada() {
        initComponents();
        setLocationRelativeTo(this);
        llenartabla();
        llenarComboBoxGeneros();
        llenarComboBoxAutores();

    }

    public void VentanaBusquedaAvanzada() {

        llenartabla();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelPrincipal = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaLibros = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        comboBoxGenero = new javax.swing.JComboBox<>();
        btnRegresar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        panelCalendario = new javax.swing.JPanel();
        calendario = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();
        panelAutores = new javax.swing.JPanel();
        comboBoxAutores = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelPrincipal.setBackground(new java.awt.Color(255, 255, 255));
        panelPrincipal.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tablaLibros = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex ){
                return false;
            }
        };
        tablaLibros.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tablaLibros);

        panelPrincipal.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, 716, 227));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "GENEROS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        comboBoxGenero.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxGeneroItemStateChanged(evt);
            }
        });
        jPanel1.add(comboBoxGenero, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 170, -1));

        panelPrincipal.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 70, 190, 70));

        btnRegresar.setBackground(new java.awt.Color(255, 0, 0));
        btnRegresar.setForeground(new java.awt.Color(255, 255, 255));
        btnRegresar.setText("REGRESAR");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });
        panelPrincipal.add(btnRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 470, -1, -1));

        jPanel2.setBackground(new java.awt.Color(0, 0, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 540, Short.MAX_VALUE)
        );

        panelPrincipal.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 20, 540));

        jPanel3.setBackground(new java.awt.Color(0, 0, 255));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 540, Short.MAX_VALUE)
        );

        panelPrincipal.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 0, -1, 540));

        panelCalendario.setBackground(new java.awt.Color(255, 255, 255));
        panelCalendario.setBorder(javax.swing.BorderFactory.createTitledBorder("BUSCAR POR FECHA"));
        panelCalendario.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        calendario.setDateFormatString("yyyy-MM-dd ");
        calendario.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                calendarioPropertyChange(evt);
            }
        });
        panelCalendario.add(calendario, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 157, 31));

        panelPrincipal.add(panelCalendario, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 70, 190, 80));

        jButton1.setText("BUSCAR POR FECHA");
        panelPrincipal.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 160, -1, -1));

        panelAutores.setBackground(new java.awt.Color(255, 255, 255));
        panelAutores.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "AUTORES", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N
        panelAutores.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        comboBoxAutores.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxAutoresItemStateChanged(evt);
            }
        });
        panelAutores.add(comboBoxAutores, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 170, -1));

        panelPrincipal.add(panelAutores, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, 190, 70));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        VentanaLibros newframe = new VentanaLibros();
        newframe.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void comboBoxGeneroItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxGeneroItemStateChanged
        String filtro = comboBoxGenero.getSelectedItem().toString();

        tablaLibros.setRowSorter(tr);

        if (!"".equals(filtro)) {

            tr.setRowFilter(RowFilter.regexFilter(filtro));

        } else {
            tablaLibros.setRowSorter(tr);
        }
    }//GEN-LAST:event_comboBoxGeneroItemStateChanged

    private void comboBoxAutoresItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxAutoresItemStateChanged
        String filtro = comboBoxAutores.getSelectedItem().toString();
        tablaLibros.setRowSorter(tr);
        if (!"".equals(filtro)) {

            tr.setRowFilter(RowFilter.regexFilter(filtro));

        } else {
            tablaLibros.setRowSorter(tr);
        }    }//GEN-LAST:event_comboBoxAutoresItemStateChanged

    private void calendarioPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_calendarioPropertyChange

      //  DefaultTableModel modelo = new DefaultTableModel();
        modelo.setRowCount(0);
        if ("date".equals(evt.getPropertyName())) {
            Date selectedDate = calendario.getDate();
            try {

                String sql = "SELECT * FROM libro WHERE añodepublicacion =?";

                // Crear el PreparedStatement y establecer el parámetro
                ps = connection.prepareStatement(sql);
                ps.setDate(1, new java.sql.Date(selectedDate.getTime()));

                // Ejecutar la consulta SQL
                ResultSet rs = ps.executeQuery();

                ResultSetMetaData rsMd = (ResultSetMetaData) rs.getMetaData();
                int cantidadColumnas = rsMd.getColumnCount();

                modelo.addColumn("Codigo");
                modelo.addColumn("Titulo");
                modelo.addColumn("Genero");
                modelo.addColumn("Autor");
                modelo.addColumn("Publicado");
                modelo.addColumn("Copias");

                int[] anchos = {40, 40, 40, 60, 40, 5};
                for (int i = 0; i < tablaLibros.getColumnCount(); i++) {
                    tablaLibros.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
                }

                while (rs.next()) {
                    Object[] filas = new Object[cantidadColumnas];
                    for (int i = 0; i < cantidadColumnas; i++) {
                        filas[i] = rs.getObject(i + 1);
                    }
                    System.out.println(ps);
                    modelo.addRow(filas);
                }

                // Cerrar recursos
                rs.close();
                ps.close();

            } catch (SQLException e) {
                System.out.println(e.getMessage());
            }
        }


    }//GEN-LAST:event_calendarioPropertyChange

    public void llenartabla() {
        try {

            tablaLibros.setModel(modelo);
            String sql = "SELECT libro.codigo, libro.titulo, categoria.nombre, libro.autor, libro.añodepublicacion,libro.numerodeCopias FROM libro inner join categoria on genero = categoria.id_categoria";
            ps = connection.prepareStatement(sql);
            rs = ps.executeQuery();

            ResultSetMetaData rsMd = (ResultSetMetaData) rs.getMetaData();
            int cantidadColumnas = rsMd.getColumnCount();

            modelo.addColumn("Codigo");
            modelo.addColumn("Titulo");
            modelo.addColumn("Genero");
            modelo.addColumn("Autor");
            modelo.addColumn("Publicado");
            modelo.addColumn("Copias");

            int[] anchos = {40, 40, 40, 60, 40, 5};
            for (int i = 0; i < tablaLibros.getColumnCount(); i++) {
                tablaLibros.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
            }

            while (rs.next()) {
                Object[] filas = new Object[cantidadColumnas];
                for (int i = 0; i < cantidadColumnas; i++) {
                    filas[i] = rs.getObject(i + 1);
                }
                modelo.addRow(filas);
            }

        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
    }

    public void llenarComboBoxGeneros() {

        try {
            String sql = "select * From categoria";
            ps = connection.prepareStatement(sql);
            rs = ps.executeQuery();
            comboBoxGenero.addItem("Seleccione genero");
            while (rs.next()) {
                comboBoxGenero.addItem(rs.getString("nombre"));
            }

        } catch (SQLException e) {
            System.out.println(e.toString());
        }

    }

    public void llenarComboBoxAutores() {

        try {
            String sql = "select * From libro";
            ps = connection.prepareStatement(sql);
            rs = ps.executeQuery();
            comboBoxAutores.addItem("Seleccione autor");
            while (rs.next()) {
                comboBoxAutores.addItem(rs.getString("autor"));
            }

        } catch (SQLException e) {
            System.out.println(e.toString());
        }

    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaBusquedaAvanzada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaBusquedaAvanzada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaBusquedaAvanzada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaBusquedaAvanzada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaBusquedaAvanzada().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegresar;
    private com.toedter.calendar.JDateChooser calendario;
    private javax.swing.JComboBox<String> comboBoxAutores;
    private javax.swing.JComboBox<String> comboBoxGenero;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelAutores;
    private javax.swing.JPanel panelCalendario;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JTable tablaLibros;
    // End of variables declaration//GEN-END:variables
}
